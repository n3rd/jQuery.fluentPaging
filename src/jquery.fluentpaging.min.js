
(function($,undefined){var FluentPaging=(function(scope,options){var $scope=$(scope);var defaults={callback:undefined,prefill:true,bottom:0,loaderSelector:undefined,debug:false};var options=$.extend({},defaults,options);var currentPage=0;var paused=false;var contentCheck=function(){if(options.debug)
console.log('contentCheck');if(!paused&&$(window).scrollTop()>=$(document).height()-$(window).height()-options.bottom){loadNextPage();}};var doPaging=function(page){paused=true;if(options.callback){$(options.loaderSelector).show();var result=options.callback(page);result.then(function(){if(options.debug)
console.log('page '+page+' succeeded');$(options.loaderSelector).hide();paused=false;contentCheck();},function(){if(options.debug)
console.log('page '+page+' failed');$(options.loaderSelector).hide();stopPaging();});}};var loadNextPage=function(){doPaging(++currentPage);};var stopPaging=function(){$scope.off('scroll.fluentpaging');if(options.debug)
console.log('paging stopped');};var run=function(){$scope.on('scroll.fluentpaging',contentCheck);$(options.loaderSelector).hide();if(options.prefill){loadNextPage();}};var pause=function(){paused=true;};var resume=function(){paused=false;};return{run:run,loadNextPage:loadNextPage,pause:pause,resume:resume,stopPaging:stopPaging};});$.fn.fluentPaging=function(options){return this.each(function(){if(typeof options==='object'){var instance=new FluentPaging(this,options);instance.run();$.data(this,'fluentpaging',instance);}else if(typeof options==='string'){var instance=$.data(this,'fluentpaging');switch(options){case'destroy':$.data(this,'fluentpaging',null);instance.stopPaging();instance=null;break;default:instance[options]();}}});};})(jQuery);